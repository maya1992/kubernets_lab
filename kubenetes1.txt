To install and run kubenetes first we need to install docker, then initiale the docker swarm.
When all the nodes have joined the swarm as worker then we need to run below commands in all instances:
1. apt update
2. apt-get update
3. apt-get install apt-transport-https
4. wget -q -O - https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    (Above command will add gpg key so that the packages that will be going to downloded can be trusted)
5. echo deb http://apt.kubernetes.io/ kubernetes-xenial main | tee /etc/apt/sources.list.d/kubernetes.list
( **this command will download the packages for kubelet and kubeadm.**)
(***tee command reads the standard input and writes it to both the standard output and one or more files. The command is named after the T-splitter used in plumbing. It basically breaks the output of a program so that it can be both displayed and saved in a file.***)

6.  apt-get install kubelet kubeadm -y
 
NOW WE HAVE INSTALL KUBELET AND KUBEADM IN ALL INSTANCES.
NOW WE WILL RUN BELOW COMMAND IN MANAGER INSTANCE :

7. kubeadm init --pod-network-cidr=10.244.0.0/16 >> cluster_initialized.txt
8. mkdir /root/.kube
9. cp /etc/kubernetes/admin.conf /root/.kube/config
10. kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
11. systemctl restart kubelet.service 
12. kubectl get nodes
    (via above command manager node will be shown)

NOW WE WILL CREATE A TOKEN SO THAT WORKER NODES CAN JOIN KUBERNETES CLUSTER:
13. kubeadm token create --print-join-command
     (ABOVE command will generate a token and we need to open port mentioned in utput of this command and we need to copy this out put and paste is in worker nodes)

BELOW IS THE OUTPUT OF COMMAND NUMBER13 :
HERE 172.31.42.136 IS THE PRIVATE IP OF MANAGER NODE , AND WE NEED TO OPEN PORT NUMBER 6443 IN ALL INSTANCES :
kubeadm join 172.31.42.136:6443 --token b3n9lu.f0f16e0t9qp5b0cu     --discovery-token-ca-cert-hash sha256:b75ac2d23ee15c1edd9a29cf9c380a9dba45da19331d4fdc445f1d63d4fb7440

AFTER PASTING THE OUTPUT IN WORKED NODES WE WIL RUN BELOW COMMAND AGAIN :
14. kubectl get nodes
NOW ALL THE NODES WILL BE SHOWN.
(status may be shown as not ready that will be changed to ready in some time.)

15. kubectl get namespaces
(This command will show the namespaces ans status will be shown as active)

NOW WE WILL CREATE A NAMESPACE WITH NAME ap2v
16. kubectl create namespace ap2v

NOW THIS NAMESPACE WILL BE SHOWN VIA kubectl get namespaces
17. kubectl get namespaces

NOW WE WILL RUN BELOW COMMAND:
18. kubectl get pods -n ap2v
ABOVE COMMAND WILL GIVE THE BELOW RESULT :
No resources found in ap2v namespaces.

now we will create a yml file with the name pod1.yml:
19. vim pod1.yml

apiVersion: v1
kind: Pod
metadata:
  name: mypod1
  labels:
    abc: xyz
spec:
  containers:
    - name: mycont1
      image: nginx


20. kubectl create -f pod1.yml -n ap2v
via this command pod will be created with name mypod1

21. kubectl get pods -n ap2v
above command will show the pod with name mypod1 in running state.
This will also assign ip to this pod.

22. kubectl get pods -n ap2v -o wide
this command will show more information of mypod1 like node ,nominated node,readiness gates etc.

23. curl http://10.244.1.2
this command will show the output

root@manager:~# curl http://10.244.1.2
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>


NOW WE WILL DELETE THIS POD 
24. kubectl delete pod mypod1 -n ap2v
pod "mypod1" deleted

now we will create DC :
for this we will create a yml file dc.yml
25. vim dc.yml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydc
  labels:	
    ap2v: linux
spec:
  replicas: 3
  selector:
    matchLabels:
      ap2v: aws
  template:
    metadata:
      labels:
        ap2v: aws
    spec:
      containers:
        - name: mypod
          image: nginx



26. now we will create dc
kubectl create -f dc.yml -n ap2v
result of above command: deployment.apps/mydc created


27. kubectl get deployments -n ap2v
it will show dc with name mydc and available replicas

output:
Name	READY	UP-TO-DATE	AVAILABLE	AGE
mydc	3/3	3		3		4m10s

28. kubectl gets pods -n ap2v
NAME                    READY   STATUS    RESTARTS   AGE
mydc-5c7795f4bf-k7lqp   1/1     Running   0          9m21s
mydc-5c7795f4bf-pzlwm   1/1     Running   0          9m21s
mydc-5c7795f4bf-wgzps   1/1     Running   0          9m21s

NOW WE WILL ENTER IN ONE POD AND EXIT:
29.  kubectl exec -it mydc-5c7795f4bf-k7lqp /bin/bash -n ap2v

30. exit

31. enter in all pods and exit

32.kubectl get pods -n ap2v -o wide
NAME                    READY   STATUS    RESTARTS   AGE   IP           NODE      NOMINATED NODE   READINESS GATES
mydc-5c7795f4bf-k7lqp   1/1     Running   0          22m   10.244.2.2   worker2   <none>           <none>
mydc-5c7795f4bf-pzlwm   1/1     Running   0          22m   10.244.1.3   worker1   <none>           <none>
mydc-5c7795f4bf-wgzps   1/1     Running   0          22m   10.244.1.4   worker1   <none>           <none>

NOW WE WILL CHECK ALL IP'S MENTIONED ABOVE:
33. root@manager:~# curl http://10.244.2.2
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
root@manager:~#

34. root@manager:~# curl http://10.244.1.3
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>



35. root@manager:~# curl http://10.244.1.4
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
root@manager:~#


NOW WE WILL ENTER IN FIRST POD AND CREATE INDEX.HTML FILE
36.  kubectl exec -it mydc-5c7795f4bf-k7lqp /bin/bash -n ap2v

37. cd /usr/share/nginx/html/

38.  echo "hi this is nginx server" >> index.html

39. root@manager:~# curl http://10.244.2.2
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
hi this is nginx server


NOW WE WILL ENTER IN SECOND POD AND CREATE INDEX.HTML FILE
40.  kubectl exec -it mydc-5c7795f4bf-pzlwm /bin/bash -n ap2v

41. cd /usr/share/nginx/html

42. rm -rf index.html

43. echo "hi this is second pod nginx index.html file" >> index.html

44. exit

45. curl http://10.244.1.3
hi this is second pod nginx index.html file



 

